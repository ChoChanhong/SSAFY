{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/libraries/Counters.sol\":{\"keccak256\":\"0xbb626802d2864b693747900557cfa17e74ef72834dba3dfb077b905f4f7bbf2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc374119ad86fad2e795e7ad150847fea491131143f38c89192e25ab53127f4f\",\"dweb:/ipfs/QmRWtJ1tYHh2qzkixVfSLdshJw4vCQFh4NdhwAJ779wump\"]},\"project:/src/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x3c9008556e92b7801ef757b6dd55a6ecf355eeb9c19a7aaf7913947839cfc4aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40eb4e3cba583c0f6f113df819ac174be4e15cb51533084a046800c1bea86427\",\"dweb:/ipfs/QmcJjM67Y7DJhpahXnC1YkAhkYtPfpwCV5wJHzJnJx3sfb\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ee84117e5bc690c0bd6bb87e6386ae64d3a8665aaae9da6f68633d0ccdcb09564736f6c63430008110033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ee84117e5bc690c0bd6bb87e6386ae64d3a8665aaae9da6f68633d0ccdcb09564736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "654:665:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "654:665:13:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport './SafeMath.sol';\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\n\n library Counters {\n    using SafeMath for uint256; \n\n // build your own variable type with the keyword 'struct'\n\n// is a mechanism to keep track of our values of arithmetic changes\n// to our code \nstruct Counter {\n    uint256 _value;    \n}\n\n// we want to find the current value of a count \nfunction current(Counter storage counter ) internal view returns(uint256) {\n    return counter._value;\n} \n\n// funtion that always increments by 1 \nfunction increment(Counter storage counter) internal {\n    counter._value += 1;\n}\n\n// function that always decrement by 1 \nfunction decrement(Counter storage counter) internal {\n    counter._value = counter._value.sub(1);\n}\n\n\n\n}",
  "sourcePath": "C:\\Users\\SSAFY\\Desktop\\특화 깃\\S07P22E205\\smart-contract\\src\\contracts\\libraries\\Counters.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        1412
      ],
      "SafeMath": [
        1545
      ]
    },
    "id": 1413,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1361,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:13"
      },
      {
        "absolutePath": "project:/src/contracts/libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1362,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 1546,
        "src": "56:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1363,
          "nodeType": "StructuredDocumentation",
          "src": "82:569:13",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 1412,
        "linearizedBaseContracts": [
          1412
        ],
        "name": "Counters",
        "nameLocation": "662:8:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1366,
            "libraryName": {
              "id": 1364,
              "name": "SafeMath",
              "nameLocations": [
                "683:8:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1545,
              "src": "683:8:13"
            },
            "nodeType": "UsingForDirective",
            "src": "677:27:13",
            "typeName": {
              "id": 1365,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 1369,
            "members": [
              {
                "constant": false,
                "id": 1368,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "880:6:13",
                "nodeType": "VariableDeclaration",
                "scope": 1369,
                "src": "872:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1367,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "872:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "858:7:13",
            "nodeType": "StructDefinition",
            "scope": 1412,
            "src": "851:42:13",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1380,
              "nodeType": "Block",
              "src": "1018:30:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1377,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "1031:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1039:6:13",
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1368,
                    "src": "1031:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1376,
                  "id": 1379,
                  "nodeType": "Return",
                  "src": "1024:21:13"
                }
              ]
            },
            "id": 1381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "953:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1372,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "977:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "961:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1371,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1370,
                      "name": "Counter",
                      "nameLocations": [
                        "961:7:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1369,
                      "src": "961:7:13"
                    },
                    "referencedDeclaration": 1369,
                    "src": "961:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "960:26:13"
            },
            "returnParameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1381,
                  "src": "1009:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:9:13"
            },
            "scope": 1412,
            "src": "944:104:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1393,
              "nodeType": "Block",
              "src": "1144:28:13",
              "statements": [
                {
                  "expression": {
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1387,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1384,
                        "src": "1150:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1389,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1158:6:13",
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "1150:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1168:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1150:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:19:13"
                }
              ]
            },
            "id": 1394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1100:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1384,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1126:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "1110:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1382,
                      "name": "Counter",
                      "nameLocations": [
                        "1110:7:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1369,
                      "src": "1110:7:13"
                    },
                    "referencedDeclaration": 1369,
                    "src": "1110:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1109:25:13"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:13"
            },
            "scope": 1412,
            "src": "1091:81:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "1267:47:13",
              "statements": [
                {
                  "expression": {
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1400,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1397,
                        "src": "1273:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1281:6:13",
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "1273:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1309:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 1403,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "1290:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1298:6:13",
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1368,
                          "src": "1290:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1305:3:13",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1464,
                        "src": "1290:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1290:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1273:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "1273:38:13"
                }
              ]
            },
            "id": 1411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1223:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1397,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1249:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "1233:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1395,
                      "name": "Counter",
                      "nameLocations": [
                        "1233:7:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1369,
                      "src": "1233:7:13"
                    },
                    "referencedDeclaration": 1369,
                    "src": "1233:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1369_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1232:25:13"
            },
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:0:13"
            },
            "scope": 1412,
            "src": "1214:100:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1413,
        "src": "654:665:13",
        "usedErrors": []
      }
    ],
    "src": "32:1287:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-25T17:56:23.871Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}